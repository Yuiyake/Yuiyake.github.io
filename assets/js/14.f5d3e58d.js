(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{669:function(_,s,v){"use strict";v.r(s);var a=v(4),t=Object(a.a)({},(function(){var _=this,s=_.$createElement,v=_._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[_._v("#")]),_._v(" 操作系统")]),_._v(" "),v("h2",{attrs:{id:"第一章-操作系统引论"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一章-操作系统引论"}},[_._v("#")]),_._v(" 第一章 操作系统引论")]),_._v(" "),v("h3",{attrs:{id:"基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[_._v("#")]),_._v(" 基本概念")]),_._v(" "),v("ul",[v("li",[_._v("操作系统的定义\n"),v("ul",[v("li",[_._v("操作系统是控制和管理计算机的软、硬件资源， 合理地组织计算机的工作流程，以及方便用户的程序集合。")])])])]),_._v(" "),v("br"),_._v(" "),v("ul",[v("li",[_._v("操作系统的特征\n"),v("ul",[v("li",[_._v("并发 共享 虚拟 不确定")])])])]),_._v(" "),v("br"),_._v(" "),v("ul",[v("li",[_._v("操作系统的功能\n"),v("ul",[v("li",[_._v("存储管理\n"),v("ul",[v("li",[_._v("任务：提高内存利用率")]),_._v(" "),v("li",[_._v("功能：内存分配，地址映射，内存保护，内存扩充")])])]),_._v(" "),v("li",[_._v("进程管理\n"),v("ul",[v("li",[_._v("任务：对处理机的分配和运行进行有效管理")]),_._v(" "),v("li",[_._v("功能：进程控制，进程同步，进程通信，进程调度")])])]),_._v(" "),v("li",[_._v("设备管理\n"),v("ul",[v("li",[_._v("任务：完成用户程序请求的io操作，为程序分配io设备")]),_._v(" "),v("li",[_._v("功能：设备分配，设备控制，设备无关性")])])]),_._v(" "),v("li",[_._v("文件管理\n"),v("ul",[v("li",[_._v("任务：对文件的管理（放在外存）")]),_._v(" "),v("li",[_._v("功能：文件存储空间管理，目录管理，文件读写管理，文件存取控制")])])])])])]),_._v(" "),v("h3",{attrs:{id:"操作系统的类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统的类型"}},[_._v("#")]),_._v(" 操作系统的类型")]),_._v(" "),v("ul",[v("li",[_._v("批处理系统\n"),v("ul",[v("li",[_._v("单道批处理：内存只放一道作业，完成顺序跟进内存顺序相关")]),_._v(" "),v("li",[_._v("多道批处理：内存多道作业，完成顺序与进内存顺序无关\n= 优缺点：\n"),v("ol",[v("li",[_._v("优点：资源利用率高，系统吞吐量大")]),_._v(" "),v("li",[_._v("缺点：平均周转时间长，无交互")])])])])])]),_._v(" "),v("br"),_._v(" "),v("ul",[v("li",[_._v("分时系统\n"),v("ul",[v("li",[_._v("允许多终端用户使用计算机，用户感觉不到其他用户的存在，像独占。")]),_._v(" "),v("li",[_._v("简单分时")]),_._v(" "),v("li",[_._v("前后台分时")]),_._v(" "),v("li",[_._v("多道分时")]),_._v(" "),v("li",[_._v("特征：多路性，独立性，交互性，及时性")])])])]),_._v(" "),v("br"),_._v(" "),v("ul",[v("li",[_._v("实时系统\n"),v("ul",[v("li",[_._v("对外部输入的信息，实时系统能在规定时间内处理完成并反应")]),_._v(" "),v("li",[_._v("闭环实时：实时控制系统")]),_._v(" "),v("li",[_._v("开环实时：实时信息处理系统")]),_._v(" "),v("li",[_._v("特殊要求：高可靠性，过载保护，对截止时间的要求")])])])]),_._v(" "),v("h2",{attrs:{id:"第二章-进程管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二章-进程管理"}},[_._v("#")]),_._v(" 第二章 进程管理")]),_._v(" "),v("h3",{attrs:{id:"进程的引入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程的引入"}},[_._v("#")]),_._v(" 进程的引入")]),_._v(" "),v("ul",[v("li",[_._v("程序的顺序（串行）执行\n"),v("ul",[v("li",[_._v("特点")])]),_._v(" "),v("ol",[v("li",[_._v("封闭性")]),_._v(" "),v("li",[_._v("顺序性")]),_._v(" "),v("li",[_._v("可再现性")])])]),_._v(" "),v("li",[_._v("程序的并发执行\n"),v("ul",[v("li",[_._v("特点\n"),v("ol",[v("li",[_._v("间断性")]),_._v(" "),v("li",[_._v("失去封闭性")]),_._v(" "),v("li",[_._v("失去可再现性")])])])])]),_._v(" "),v("li",[_._v("并发执行的条件Bernstein：说白了就是读集与写集的交集为空，就可以并发执行。（再通俗点就是一个变量在不同程序段里没有同时被赋值/更改）")]),_._v(" "),v("li",[_._v("进程的定义：可并发执行的程序在一个数据集合上的"),v("strong",[_._v("执行过程")]),_._v("(实质是过程)")]),_._v(" "),v("li",[v("strong",[_._v("进程的特点（属性）：动态和并发")])]),_._v(" "),v("li",[_._v("进程的基本属性\n"),v("ul",[v("li",[_._v("进程是拥有资源的独立单位")]),_._v(" "),v("li",[_._v("进程是独立调度和分派的基本单位")])])]),_._v(" "),v("li",[_._v("进程与程序的关系")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/68474fc9a34e411e8245effe5a302284.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_19,color_FFFFFF,t_70,g_se,x_16",alt:"os_2_1.png"}})])]),_._v(" "),v("h3",{attrs:{id:"进程的状态及其组成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程的状态及其组成"}},[_._v("#")]),_._v(" 进程的状态及其组成")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("进程的三种基本状态：就绪，运行，阻塞")]),_._v(" "),v("ul",[v("li",[_._v("基本状态图")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/a77339e5ec0243e6af98d30dba527268.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os_2_2.png"}})]),_._v(" "),v("li",[_._v("双挂起图")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/fc8db8ba204b4c69a79bab123311a82b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os_2_3.png"}})]),_._v(" "),v("li",[_._v("处于挂起状态的进程不在内存里，在外存。挂起状态的提出就是为了内外存对换的需要。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("进程的组成")])]),_._v(" "),v("ul",[v("li",[_._v("进程控制块PCB，程序段，数据段，堆栈。其中PCB是进程存在的唯一标识。")]),_._v(" "),v("li",[_._v("引入PCB的作用：就是使程序能成为独立运行的单位，并可和其他进程并发执行。")]),_._v(" "),v("li",[_._v("PCB的内容\n"),v("ol",[v("li",[_._v("进程描述信息")]),_._v(" "),v("li",[_._v("处理机状态信息")]),_._v(" "),v("li",[_._v("进程调度信息（状态&优先级）")]),_._v(" "),v("li",[_._v("进程控制和资源占用信息（进程的内容，包括地址啥的）")])])])])])]),_._v(" "),v("h3",{attrs:{id:"进程的控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程的控制"}},[_._v("#")]),_._v(" 进程的控制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("操作系统的内核（运行在系统态）")]),_._v(" "),v("ul",[v("li",[_._v("核心态（系统态）：具有较高的特权，能执行一切命令，访问所有寄存器和存储区。")]),_._v(" "),v("li",[_._v("用户态：具有较低特权，只能执行规定的命令，访问指定的寄存器和存储区。")])])]),_._v(" "),v("li",[v("p",[_._v("内核与原语")]),_._v(" "),v("ul",[v("li",[_._v("内核\n"),v("ul",[v("li",[_._v("系统将一些与硬件紧密相关的模块放在内核\n"),v("ul",[v("li",[_._v("中断处理")]),_._v(" "),v("li",[_._v("时钟管理")])])]),_._v(" "),v("li",[_._v("内核在执行某些基本操作时，往往是利用原语操作实现的。")])])]),_._v(" "),v("li",[_._v("原语\n"),v("ul",[v("li",[_._v("原语由若干条指令构成、用于完成一定功能的过程。")]),_._v(" "),v("li",[_._v("原语是“原子操作”。即一个操作中的所有动作，要么全做，要么全不做。换言之，原子操作是一个不可分割的操作。")])])])])])]),_._v(" "),v("h3",{attrs:{id:"线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[_._v("#")]),_._v(" 线程")]),_._v(" "),v("ul",[v("li",[_._v("线程的定义：线程是进程中的一个实体，是系统独立调度和分派的基本单位")]),_._v(" "),v("li",[_._v("进程与线程比较：\n"),v("ul",[v("li",[_._v("进程是资源的拥有者")]),_._v(" "),v("li",[_._v("线程不拥有资源，只有TCB及堆栈")]),_._v(" "),v("li",[_._v("调度\n"),v("ul",[v("li",[_._v("线程调度快，需要空间小。")]),_._v(" "),v("li",[_._v("进程因拥有资源，调度时因负担过重而缓慢。")])])]),_._v(" "),v("li",[_._v("并发性\n"),v("ul",[v("li",[_._v("在引入线程的操作系统中，不仅进程之间可以并发执行，一个进程中的多个线程之间亦可并发执行。")])])]),_._v(" "),v("li",[_._v("拥有资源\n"),v("ul",[v("li",[_._v("进程是资源的拥有者")])])]),_._v(" "),v("li",[_._v("系统开销\n"),v("ul",[v("li",[_._v("进程切换的开销远远大于线程切换的开销，线程的  切换省去了资源的回收。")])])])])])]),_._v(" "),v("h2",{attrs:{id:"第三章-进程同步与通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三章-进程同步与通信"}},[_._v("#")]),_._v(" 第三章 进程同步与通信")]),_._v(" "),v("h3",{attrs:{id:"进程同步与互斥"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程同步与互斥"}},[_._v("#")]),_._v(" 进程同步与互斥")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("进程同步的基本概念")]),_._v(" "),v("ul",[v("li",[_._v("临界资源：某段时间内仅允许一个进程使用的资源。")]),_._v(" "),v("li",[_._v("临界区：每个进程中访问临界资源的那段代码。")])])]),_._v(" "),v("li",[v("p",[_._v("同步机制遵循的准则")]),_._v(" "),v("ul",[v("li",[_._v("空闲让进，忙着等待，有限等待，让权等待")]),_._v(" "),v("li",[_._v("临界区访问描述")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/a7bd68911e694aa891c346fc89b1ad0d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_12,color_FFFFFF,t_70,g_se,x_16",alt:"os-3-1.jpg"}})])])]),_._v(" "),v("li",[v("p",[_._v("软件互斥的方法")]),_._v(" "),v("ul",[v("li",[_._v("硬件：TS（Test and Set）指令 / 禁止中断")]),_._v(" "),v("li",[_._v("软件：\n"),v("ul",[v("li",[_._v("单标志算法，双标志、先检查算法，双标志、先修改后检查算法，先修改、后检查、后修改算法")])])])])]),_._v(" "),v("li",[v("p",[_._v("信号量和PV操作")]),_._v(" "),v("ul",[v("li",[_._v("semaphore a = 0 声明信号量,必须给初始值")]),_._v(" "),v("li",[_._v("pv操作必须成对出现")]),_._v(" "),v("li",[_._v("p操作(阻塞)")])]),_._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("void")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("wait")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("semaphore  s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("   \n    s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("value "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("value "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("-")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("if")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("value "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("block")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("queue"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("  \n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 将进程阻塞，并将其投入等待队列s.queue */")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br")])]),v("ul",[v("li",[_._v("v操作(唤醒)")])]),_._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("void")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("signal")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("semaphore  s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("   \n    s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("value "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("value "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("+")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("if")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("value "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("wackup")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("s"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("queue"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("      \n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 唤醒阻塞进程，将其从等待队列s.queue 取出，投入就绪队列*/")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br")])])]),_._v(" "),v("li",[v("p",[_._v("pv操作解决互斥同步问题")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("互斥：进去之前+p，出来后+v ,互斥锁")])]),_._v(" "),v("li",[v("p",[_._v("如果有多个资源，则设多个信号量")])]),_._v(" "),v("li",[v("p",[_._v("如果有n端抢一个资源，在信号量初始化的时候给n")]),_._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("semaphore mutex=1;\nP1:                       P2:\nwhile (1){       \t      while (1){\n\tP(mutex);     \t\t      P(mutex);\n\t临界区;\t\t              临界区\n\tV(mutex);\t\t          V(mutex);\n\t剩余区;\t\t              剩余区;\n    };\t                      };\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br"),v("span",{staticClass:"line-number"},[_._v("7")]),v("br"),v("span",{staticClass:"line-number"},[_._v("8")]),v("br")])])]),_._v(" "),v("li",[v("p",[_._v("同步：先执行的后面+v， 后执行的前面+p")]),_._v(" "),v("div",{staticClass:"language-text line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("semaphore a,b=0,0;\n\n{s1; V(a); V(b)}\n\n{P(a); s2}\n\n{P(b); s3}\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br"),v("span",{staticClass:"line-number"},[_._v("7")]),v("br")])])])])])]),_._v(" "),v("h3",{attrs:{id:"经典进程同步问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#经典进程同步问题"}},[_._v("#")]),_._v(" 经典进程同步问题")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("生产者-消费者问题")]),_._v(" "),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/2e21fdffc3264f1a935aa4fdc27a6cbe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-3-2.jpg"}})])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("读者-写者问题")]),_._v(" "),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/646e2dd84d184f9c9d12dfcde61d7c48.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-3-3.jpg"}}),_._v(" "),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/42e885adcc444d94b219a60c09937878.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-3-4.jpg"}})])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("哲学家进餐问题")]),_._v(" "),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/0e57c5c1722b4938a2daca1e0bbc6b23.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-3-5.jpg"}})])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("打瞌睡的理发师问题")]),_._v(" "),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/0808ffadf7f243b68e44a613b98de76f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-3-6.jpg"}})])])]),_._v(" "),v("h3",{attrs:{id:"and信号量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#and信号量"}},[_._v("#")]),_._v(" AND信号量")]),_._v(" "),v("ul",[v("li",[_._v("基本思想：将进程在整个运行期间所需要的所有临界资源一次性全部分配给进程，待进程使用完后再一起释放。")]),_._v(" "),v("li",[_._v("解决同步互斥问题。")])]),_._v(" "),v("h3",{attrs:{id:"进程通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程通信"}},[_._v("#")]),_._v(" 进程通信")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("进程通信类型")]),_._v(" "),v("ul",[v("li",[_._v("共享存储器系统（高耦合）")]),_._v(" "),v("li",[_._v("消息传递系统、\n"),v("ul",[v("li",[_._v("直接通信方式")]),_._v(" "),v("li",[_._v("间接通信方式")])])]),_._v(" "),v("li",[_._v("管道通信")])])]),_._v(" "),v("li",[v("p",[_._v("常用的通信方式：")]),_._v(" "),v("ul",[v("li",[_._v("命名管道")]),_._v(" "),v("li",[_._v("套接字")]),_._v(" "),v("li",[_._v("远程过程调用")])])])]),_._v(" "),v("h2",{attrs:{id:"第四章-调度与死锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第四章-调度与死锁"}},[_._v("#")]),_._v(" 第四章 调度与死锁")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("调度类型与准则")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("调度的类型")]),_._v(" "),v("ul",[v("li",[_._v("高级调度：决定哪个程序可以进入系统中处理")]),_._v(" "),v("li",[_._v("中级调度：管理挂起与解挂。实质是内存管理中的对换功能")]),_._v(" "),v("li",[_._v("低级调度："),v("strong",[_._v("最基本的调度")]),_._v("，管理谁能拿到处理机")])])]),_._v(" "),v("li",[v("p",[_._v("调度的性能准则")]),_._v(" "),v("ul",[v("li",[_._v("面向用户\n"),v("ol",[v("li",[_._v("响应时间快")]),_._v(" "),v("li",[_._v("周转时间短")]),_._v(" "),v("li",[_._v("优先权准则")])])]),_._v(" "),v("li",[_._v("面向系统\n"),v("ol",[v("li",[_._v("系统吞吐量")]),_._v(" "),v("li",[_._v("处理机利用率")]),_._v(" "),v("li",[_._v("各类资源平衡利用")])])])])])])]),_._v(" "),v("li",[v("p",[_._v("周转时间")]),_._v(" "),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/e621fa60e23b4959b9443149114a4fa6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-4-1.jpg"}})])])])]),_._v(" "),v("h3",{attrs:{id:"调度算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#调度算法"}},[_._v("#")]),_._v(" 调度算法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("先来先服务FCFS")]),_._v(" "),v("ul",[v("li",[_._v("没啥好说的，就是谁先来谁先做。。")]),_._v(" "),v("li",[_._v("特点：有利于长作业，对短作业不利")])])]),_._v(" "),v("li",[v("p",[_._v("短作业优先算法SJF")]),_._v(" "),v("ul",[v("li",[_._v("从后备队列中选择估计时间最短的，一直做直到做完或有什么被终止")]),_._v(" "),v("li",[_._v("特点：不利于长作业，紧急事件得不到处理。")])])]),_._v(" "),v("li",[v("p",[_._v("时间片轮转算法")]),_._v(" "),v("ul",[v("li",[_._v("进程按FCFS在就绪队列排队，调度程序把CPU分配给队首进程，令其执行一个时间片，一个时间片执行完毕将进程\n排在队尾。")]),_._v(" "),v("li",[_._v("保证用户键入的常用命令能在一个时间片内处理完毕")])])]),_._v(" "),v("li",[v("p",[_._v("优先权调度算法")]),_._v(" "),v("ul",[v("li",[_._v("从后备队列中选择若干优先权最高的作业，将它们调入内存。")]),_._v(" "),v("li",[_._v("或从就绪队列中选择优先权最高的进程，将处理机分配给它。")]),_._v(" "),v("li",[_._v("特点：综合考虑各种情况")])])]),_._v(" "),v("li",[v("p",[_._v("多级反馈队列")]),_._v(" "),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/23916625bb6f45d983e9c34b6ebc1f8a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-4-2"}})])])]),_._v(" "),v("li",[v("p",[_._v("死锁的基本概念")]),_._v(" "),v("ul",[v("li",[_._v("一组竞争系统资源or相互通信的进程互相“永久”阻塞（参考哲学家问题）")]),_._v(" "),v("li",[_._v("死锁的产生原因：\n"),v("ul",[v("li",[_._v("资源数 < 要求该种资源的进程数")]),_._v(" "),v("li",[_._v("进程的推进顺序非法")])])]),_._v(" "),v("li",[_._v("产生死锁的四个必要条件\n"),v("ul",[v("li",[_._v("互斥，请求保持，不剥夺，环路条件")])])])])])]),_._v(" "),v("h3",{attrs:{id:"死锁的预防与避免"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#死锁的预防与避免"}},[_._v("#")]),_._v(" 死锁的预防与避免")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("预防")]),_._v(" "),v("ul",[v("li",[_._v("资源有序分配：要求进程一次性申请所有所需资源。 缺：延迟，资源浪费，未知性")]),_._v(" "),v("li",[_._v("占有某些资源的进程请求被拒绝之后，立即停止运行并释放所有资源。缺：延迟巨大，增加系统开销")]),_._v(" "),v("li",[_._v("令所有进程排队并赋予序号，顺序执行。缺：不利于插入新进程")])])]),_._v(" "),v("li",[v("p",[_._v("避免")]),_._v(" "),v("ul",[v("li",[_._v("安全状态的引入：指系统至少存在一个安全序列，按照这个序列为进程分配资源，直到满足最大需求，每个进程都能顺利完成。")]),_._v(" "),v("li",[_._v("反之，如果资源不够，系统则处于不安全状态。")])])])]),_._v(" "),v("h3",{attrs:{id:"银行家算法-死锁的避免"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#银行家算法-死锁的避免"}},[_._v("#")]),_._v(" 银行家算法（死锁的避免）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("首先明确几个变量的语义：")]),_._v(" "),v("ul",[v("li",[_._v("Resource[]  系统中每种资源的总量")]),_._v(" "),v("li",[_._v("Available[]  未分配的煤种资源总量")]),_._v(" "),v("li",[_._v("Need[][]  每个进程还需要的各类资源数")]),_._v(" "),v("li",[_._v("Allocation[][]  当前分配情况")])])]),_._v(" "),v("li",[v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/b1a1934cbee64606a7f3c084e5d4cf0b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-4-3"}})])]),_._v(" "),v("li",[v("p",[_._v("死锁的检测与解除")]),_._v(" "),v("ul",[v("li",[_._v("检测\n"),v("ul",[v("li",[_._v("资源分配图")])])]),_._v(" "),v("li",[_._v("解除\n"),v("ul",[v("li",[_._v("发现死锁时，要么剥夺资源，要么撤销进程。撤销进程的代价比较小。")])])])])])]),_._v(" "),v("h2",{attrs:{id:"第五章-存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第五章-存储管理"}},[_._v("#")]),_._v(" 第五章 存储管理")]),_._v(" "),v("h3",{attrs:{id:"程序装入和链接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序装入和链接"}},[_._v("#")]),_._v(" 程序装入和链接")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("装入")]),_._v(" "),v("ul",[v("li",[_._v("重定位：把用户程序中的逻辑地址换成主存中的物理地址。")]),_._v(" "),v("li",[_._v("静态重定位：编译时产生逻辑地址，装入程序的时候进行重定位，直接写入全部的物理地址。")]),_._v(" "),v("li",[_._v("动态重定位：编译时产生逻辑地址，装入的时候先装入逻辑的，等真正要执行的时候再转成物理地址。")])])]),_._v(" "),v("li",[v("p",[_._v("链接")]),_._v(" "),v("ul",[v("li",[_._v("静态链接：对逻辑地址修改")]),_._v(" "),v("li",[_._v("装入动态链接：装入内存的时候边装边链接")]),_._v(" "),v("li",[_._v("运行动态链接：运行到哪个模块再链接")])])])]),_._v(" "),v("h3",{attrs:{id:"连续分配存储管理方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#连续分配存储管理方式"}},[_._v("#")]),_._v(" 连续分配存储管理方式")]),_._v(" "),v("ul",[v("li",[_._v("单一连续分配")]),_._v(" "),v("li",[_._v("固定分区分配")]),_._v(" "),v("li",[_._v("可变分区分配\n"),v("ul",[v("li",[_._v("首次适应法")]),_._v(" "),v("li",[_._v("下次适应法")]),_._v(" "),v("li",[_._v("最佳适应法")]),_._v(" "),v("li",[_._v("最坏适应法")])])])]),_._v(" "),v("h3",{attrs:{id:"页式存储管理-重点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#页式存储管理-重点"}},[_._v("#")]),_._v(" 页式存储管理（重点）")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/e42d0d91f37d4c43909052c2d84d3c79.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-5-1.jpg"}})]),_._v(" "),v("ul",[v("li",[_._v("页表组成：页号+块号")]),_._v(" "),v("li",[_._v("在为进程分配内存时，以块为单位，将进程中的若干页分别装入多个可以不相邻的块中。")]),_._v(" "),v("li",[_._v("页的大小由机器的地址结构决定，且是固定的。")]),_._v(" "),v("li",[_._v("逻辑地址分为3两个部分：页号和页内位移。页号占6位，页内位移占10位")]),_._v(" "),v("li",[v("strong",[_._v("逻辑地址和物理地址的关系")]),_._v("：(逻辑地址)a*1024+b, 转物理地址，只需要把a换成这一页对应的块号即可。")]),_._v(" "),v("li",[_._v("快表（了解）：其实本质就是缓存")])]),_._v(" "),v("h3",{attrs:{id:"段式存储管理-重点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#段式存储管理-重点"}},[_._v("#")]),_._v(" 段式存储管理（重点）")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/56e2ac2fbb2d4726bfe7d2a83c8cf1b5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-5-2.jpg"}})]),_._v(" "),v("ul",[v("li",[_._v("短标组成：段长+基址")]),_._v(" "),v("li",[_._v("整个作业的地址空间被分成若干个段，每个段采用一段连续的地址空间，段的长度由相应的逻辑信息的长度决定。")]),_._v(" "),v("li",[_._v("逻辑地址里分两个部分，段表始址和段长。")]),_._v(" "),v("li",[v("strong",[_._v("逻辑地址和物理地址")]),_._v("：逻辑地址转物理地址，只需要基址+段始址就好。")])]),_._v(" "),v("h3",{attrs:{id:"分页和分段的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分页和分段的区别"}},[_._v("#")]),_._v(" 分页和分段的区别")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("分页和分段的目的")]),_._v(" "),v("ul",[v("li",[_._v("页是信息的物理单位，分页是系统管理的需要，而不是用户的需要。")]),_._v(" "),v("li",[_._v("段是信息的逻辑单位，它含一组意义完整的信息。分段是为了更好地满足用户的要求。")])])]),_._v(" "),v("li",[v("p",[_._v("页和段长度")]),_._v(" "),v("ul",[v("li",[_._v("页的大小固定，由系统确定。")]),_._v(" "),v("li",[_._v("段的长度不固定，决定于用户所编写的程序。")])])]),_._v(" "),v("li",[v("p",[_._v("地址空间")]),_._v(" "),v("ul",[v("li",[_._v("分页的作业地址空间是一维的，即单一的线性地址空间。")]),_._v(" "),v("li",[_._v("分段的作业地址空间是二维的，程序员在标识一个地址时，需给出段名和段内地址。")])])])]),_._v(" "),v("h3",{attrs:{id:"段页式存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#段页式存储管理"}},[_._v("#")]),_._v(" 段页式存储管理")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/0efc094cae834bcf93c2fb6392fa6df3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-5-3.jpg"}})]),_._v(" "),v("ul",[v("li",[_._v("分页系统能有效地提高内存的利用率——解决外部碎片问题。")]),_._v(" "),v("li",[_._v("分段系统则能更好地满足用户编程的需要——解决段的共享、动态连接等问题。")]),_._v(" "),v("li",[_._v("将两者结合起来，汲取两着的优点，产生段页式存储管理")])]),_._v(" "),v("h2",{attrs:{id:"第六章-虚拟程序管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第六章-虚拟程序管理"}},[_._v("#")]),_._v(" 第六章 虚拟程序管理")]),_._v(" "),v("h3",{attrs:{id:"概念和引入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念和引入"}},[_._v("#")]),_._v(" 概念和引入")]),_._v(" "),v("ul",[v("li",[_._v("虚拟存储器特征\n"),v("ul",[v("li",[_._v("离散性 多次性 对换性 虚拟性")])])])]),_._v(" "),v("h3",{attrs:{id:"请求页式存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求页式存储管理"}},[_._v("#")]),_._v(" 请求页式存储管理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("缺页中断机构")])]),_._v(" "),v("li",[v("p",[_._v("地址变换机构")])]),_._v(" "),v("li",[v("p",[_._v("驻留集管理")]),_._v(" "),v("ul",[v("li",[_._v("定义： 即在某段时间间隔内，进程实际要访问的页面的集合。")]),_._v(" "),v("li",[_._v("固定分配、局部置换")]),_._v(" "),v("li",[_._v("可变分配、全局置换")]),_._v(" "),v("li",[_._v("可变分配、局部置换")])])]),_._v(" "),v("li",[v("p",[_._v("置换算法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("最佳置换算法OPT")])]),_._v(" "),v("li",[v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/22f3ef3e4c56409b844ded5ac564a29e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_17,color_FFFFFF,t_70,g_se,x_16",alt:"os-6-1.jpg"}})])]),_._v(" "),v("li",[v("p",[_._v("先进先出置换算法FIFO")]),_._v(" "),v("ul",[v("li",[_._v("先进入内存的页被先置换出去\n"),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/e8c559d8fb784597ae172369467af6bd.png",alt:"os-6-2.jpg"}})])])])])]),_._v(" "),v("li",[v("p",[_._v("最近最久未使用置换算法LRU")]),_._v(" "),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/71d90d0faf62463e9f520aab85cce50c.png",alt:"os-6-3.jpg"}})])])]),_._v(" "),v("li",[v("p",[_._v("CLOCK置换算法")]),_._v(" "),v("ul",[v("li",[_._v("LRU的改进版（LRU实现困难）")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/9423b6da9db0448bb0015a8de3ca0c93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-6-3.jpg"}})])])])])])]),_._v(" "),v("h3",{attrs:{id:"请求段式存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求段式存储管理"}},[_._v("#")]),_._v(" 请求段式存储管理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("段表的补充")]),_._v(" "),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/5d3b65d6dda544ffba07d9c1d50fdbaa.png",alt:"os-6-4.jpg"}})])])]),_._v(" "),v("li",[v("p",[_._v("动态链接：")]),_._v(" "),v("ul",[v("li",[_._v("装入时动态链接：在装入内存时，边装入边链接")]),_._v(" "),v("li",[_._v("运行时动态链接：运行时，用到哪个模块，再链接哪个模块，用不到的模块可不装入内存。")])])])]),_._v(" "),v("h3",{attrs:{id:"抖动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#抖动"}},[_._v("#")]),_._v(" 抖动")]),_._v(" "),v("ul",[v("li",[_._v("产生：同一程序系统被系统多次吞吐")]),_._v(" "),v("li",[_._v("预防\n"),v("ul",[v("li",[_._v("加载控制")]),_._v(" "),v("li",[_._v("L=S准则")]),_._v(" "),v("li",[_._v("局部置换")]),_._v(" "),v("li",[_._v("挂起若干进程")])])])]),_._v(" "),v("h2",{attrs:{id:"第七章-设备管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第七章-设备管理"}},[_._v("#")]),_._v(" 第七章 设备管理")]),_._v(" "),v("h3",{attrs:{id:"io设备管理概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#io设备管理概述"}},[_._v("#")]),_._v(" IO设备管理概述")]),_._v(" "),v("ul",[v("li",[_._v("IO管理功能：监视设备状态，进行设备分配，完成IO操作，缓冲管理")])]),_._v(" "),v("h3",{attrs:{id:"io控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#io控制方式"}},[_._v("#")]),_._v(" IO控制方式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("程序直接控制：忙-等待方式")])]),_._v(" "),v("li",[v("p",[_._v("中断驱动：缺点：中单次数增加会造成cpu无法及时处理，数据丢失")])]),_._v(" "),v("li",[v("p",[_._v("DMA控制：")]),_._v(" "),v("ul",[v("li",[_._v("特点：\n"),v("ol",[v("li",[_._v("传输基本单位是数据块")]),_._v(" "),v("li",[_._v("传送数据直接送入内存")]),_._v(" "),v("li",[_._v("只在传送开始或结束时需要cpu干预")])])])])]),_._v(" "),v("li",[v("p",[_._v("通道方式：")]),_._v(" "),v("ul",[v("li",[_._v("通道是DMA PLUS")]),_._v(" "),v("li",[_._v("当需要一次读多个离散数据块并送往不同内存区域时，通道一次就可以完成。")]),_._v(" "),v("li",[_._v("通道由一系列通道指令构成。")])])])]),_._v(" "),v("h3",{attrs:{id:"磁盘管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘管理"}},[_._v("#")]),_._v(" 磁盘管理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("磁盘的访问")]),_._v(" "),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/b9db7058f67b4b36a0229a4c9cbd3fd0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-1.jpg"}})])])]),_._v(" "),v("li",[v("p",[_._v("磁盘调度算法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("先来先服务FCFS")]),_._v(" "),v("ul",[v("li",[_._v("优点：简单，公平")]),_._v(" "),v("li",[_._v("缺点：平均寻道时间长")])])]),_._v(" "),v("li",[v("p",[_._v("寻道最短SSTF")]),_._v(" "),v("ul",[v("li",[_._v("优点：寻道优化")]),_._v(" "),v("li",[_._v("缺点：饥饿现象")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/b7170d5f4e8e4f48971d734f9e65559e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-2.jpg"}})])])]),_._v(" "),v("li",[v("p",[_._v("扫描算法SCAN和CSCAN")]),_._v(" "),v("ul",[v("li",[_._v("SCAN：SSTF PLUS，优先考虑磁盘移动方向，再考虑移动距离。又称电梯调度算法")]),_._v(" "),v("li",[_._v("CSCAN：解决SCAN进程严重延迟。")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/70d7540358514b49b9a6b1b6721bae08.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-3.jpg"}})])])])])])]),_._v(" "),v("h3",{attrs:{id:"文件管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[_._v("#")]),_._v(" 文件管理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("文件")]),_._v(" "),v("ul",[v("li",[_._v("定义：具有文件名的一组相关信息集合")]),_._v(" "),v("li",[_._v("结构：有结构文件，无结构文件")])])]),_._v(" "),v("li",[v("p",[_._v("文件类型：")]),_._v(" "),v("ul",[v("li",[_._v("用途分：系统文件，用户文件，库文件")]),_._v(" "),v("li",[_._v("性质分：普通文件，目录文件，特殊文件")]),_._v(" "),v("li",[_._v("属性分：可执行文件，只读文件，读/写文件")]),_._v(" "),v("li",[_._v("数据形式分：源文件，目标文件，可执行文件")]),_._v(" "),v("li",[_._v("逻辑结构分：有结构，无结构")]),_._v(" "),v("li",[_._v("物理结构分：连续文件，链接文件，索引文件")])])]),_._v(" "),v("li",[v("p",[_._v("文件系统")]),_._v(" "),v("ul",[v("li",[_._v("定义：含有大量文件及其属性说明、对文件进行操纵和管理的软件，以及向用户提供的使用文件接口的集合。")]),_._v(" "),v("li",[_._v("结构")]),_._v(" "),v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/920f6e9755bb4d79ac68e10942f8c570.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_15,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-4.jpg"}})])])]),_._v(" "),v("li",[v("p",[_._v("目录")]),_._v(" "),v("ul",[v("li",[_._v("类型：\n"),v("ul",[v("li",[_._v("单极目录：查找速度慢，不允许重名，不便于共享\n"),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/1ae22a5ecee248ba8603f44557de0c69.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_13,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-5.jpg"}})])])]),_._v(" "),v("li",[_._v("二级目录：提高文件检索速度，允许重名，不易共享。\n"),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/5225188774594bb481913f8a8eacc5d8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-6.jpg"}})])])]),_._v(" "),v("li",[_._v("树形目录：主目录为根结点，数据文件为叶子节点。\n"),v("ul",[v("li",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/73df52e6283d4d738803663cd8605d84.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWXVpeWFrZV_ng6fmna8=,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"os-7-7.jpg"}})])])])])]),_._v(" "),v("li",[_._v("功能：\n"),v("ol",[v("li",[_._v("按名存取")]),_._v(" "),v("li",[_._v("提高目录检索速度")]),_._v(" "),v("li",[_._v("允许文件同名")]),_._v(" "),v("li",[_._v("文件共享")])])])])]),_._v(" "),v("li",[v("p",[_._v("文件存储结构")]),_._v(" "),v("ul",[v("li",[_._v("外存分配\n"),v("ol",[v("li",[_._v("连续分配：优：便于顺序访问且快。缺：要有连续的存储空间")]),_._v(" "),v("li",[_._v("链接分配：优：解决文件动态增长。缺：随机访问低效")]),_._v(" "),v("li",[_._v("索引分配：优：解决动态增长，支持文件随机访问。缺：增加存储空间开销")]),_._v(" "),v("li",[_._v("混合分配：优：")])])])])]),_._v(" "),v("li",[v("p",[_._v("空闲存储空间的管理")]),_._v(" "),v("ul",[v("li",[_._v("空闲表")]),_._v(" "),v("li",[_._v("空闲链")]),_._v(" "),v("li",[_._v("位示图")]),_._v(" "),v("li",[_._v("成组链接法：空闲表+空闲链")])])])])])}),[],!1,null,null,null);s.default=t.exports}}]);