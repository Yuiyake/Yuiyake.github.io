(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{662:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"react与mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react与mvvm"}},[t._v("#")]),t._v(" react与MVVM")]),t._v(" "),s("h2",{attrs:{id:"react生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" react生命周期")]),t._v(" "),s("h2",{attrs:{id:"hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),s("h3",{attrs:{id:"为什么react的hook不能在条件语句和循环语句中用-可vue3源于hook理念的组合式api可以"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么react的hook不能在条件语句和循环语句中用-可vue3源于hook理念的组合式api可以"}},[t._v("#")]),t._v(" 为什么react的hook不能在条件语句和循环语句中用，可vue3源于Hook理念的组合式Api可以？")]),t._v(" "),s("ul",[s("li",[t._v("React 不允许 hook 处于条件语句是因为 React 把每次 render 中 useState 的顺序值 0、1、2、3 当成了 key，")]),t._v(" "),s("li",[t._v("方便后续 render 用 key 查找对应的 state。这样的目的是使 useState 更简洁。因为我们保证了 hooks 的调用顺序")]),t._v(" "),s("li",[t._v("（不保证就会报错），所以 hooks 内部可以使用链表来实现。")]),t._v(" "),s("li",[t._v("react hook是在fiber节点上存储hooks链表，每执行一次usestate，返回相对应节点数据，指针后移一位，也就意味着你在循")]),t._v(" "),s("li",[t._v("环中调用可能在下一次执行时少调用一次，这样会获取错误的fiber节点。")]),t._v(" "),s("li",[t._v("fiber是什么呢 说白了fiber就是一个返回组件的函数")]),t._v(" "),s("li",[t._v("也可以看看这个，感觉这个面试说好点"),s("a",{attrs:{href:"https://blog.csdn.net/cake_eat/article/details/120661569?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-120661569-blog-119952477.pc_relevant_sortByAnswer&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-120661569-blog-119952477.pc_relevant_sortByAnswer&utm_relevant_index=2",target:"_blank",rel:"noopener noreferrer"}},[t._v("fiber解释"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language-react line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" // 因为从React角度来看，根本就看不见变量a和变量b! React 只知道useState的返回值被你拿去了，但是你拿去之后赋值给什么变量，React根本就不知道。\nConst[a，setNextA]=usEstate(0)\nconst[b，setNextB]=usEstate(0)\nconst setNextA = () => {\n  a += 1\n}\nconst setNextB = () => {\n  b += 1\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("ul",[s("li",[t._v("Vue 3 的 setup 并不是一个常规函数，而是含有一个闭包（闭包 = 自由变量 + 函数）的函数。")]),t._v(" "),s("li",[t._v("当你用b.value += 1触发re-render时，并不会重新执行setup函数，只会重新执行fnReturn,因此 Vue根本就不需要找a和b(\n想找也找不到，原因跟React一样，Vue 只知道你拿走了ref(O)的返回值)，因为a和b都是fnReturn可以直接读到的自由变量啊!换句\n话说，a、b、fnReturn 三者组成了闭包，这个闭包会一直维持着a和b变量，提供给fnReturn访问。")])]),t._v(" "),s("div",{staticClass:"language-vue line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("const a = ref(0);\nconst b = ref(0);\nexport const Fang = defineComponent{(\n    props: ...,\n    setup: () => {\n        return () => {\n          "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{a.value} - {b.value}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        }\n    }\n)}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);