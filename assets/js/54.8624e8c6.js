(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{698:function(v,_,a){"use strict";a.r(_);var t=a(4),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"测试方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试方法"}},[v._v("#")]),v._v(" 测试方法")]),v._v(" "),a("ul",[a("li",[v._v("软件测试的目的\n"),a("ul",[a("li",[v._v("尽可能发现并排除软件中潜藏的错误，提高软件的可靠性")])])])]),v._v(" "),a("h3",{attrs:{id:"静态-动态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态-动态"}},[v._v("#")]),v._v(" 静态 - 动态")]),v._v(" "),a("ul",[a("li",[v._v("静态测试\n"),a("ul",[a("li",[v._v("静态测试就是不运行软件，静态地检查程序代码、界面、文档中可能错误的过程。")])])]),v._v(" "),a("li",[v._v("动态测试\n"),a("ul",[a("li",[v._v("实际运行被测程序，输入相应的测试数据，检查实际输出结果和预期结果是否相符的一个过程。")])])])]),v._v(" "),a("h3",{attrs:{id:"白盒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#白盒"}},[v._v("#")]),v._v(" 白盒")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("逻辑覆盖")]),v._v(" "),a("ul",[a("li",[v._v("语句覆盖、判定覆盖、条件覆盖、判定-条件覆盖、条件组合覆盖")])]),v._v(" "),a("ol",[a("li",[v._v("语句覆盖：顾名思义就是针对代码语句，设计出来的用例要保证程序中的每一个语句至少被执行一次。（最弱覆盖）")]),v._v(" "),a("li",[v._v("判定覆盖：判断语句中的每个条件表达式所有可能结果至少出现一次。")]),v._v(" "),a("li",[v._v("条件覆盖：条件覆盖要求设计用例时针对判断语句里面每个条件表达式true 和 false各取值一次，不考判断语句的计算结果（不考虑组合情况）")]),v._v(" "),a("li",[v._v("判定-条件覆盖：设计测试用例时，使得判断语句中每个条件表达式的所有可能结果至少出现一次，每个判断语句本身所有可能结果也至少出现一次。")]),v._v(" "),a("li",[v._v("条件组合覆盖：设计测试用例时，使得每个判断语句中条件结果的所有可能组合至少出现一次。")])])]),v._v(" "),a("li",[a("p",[v._v("基本路径")]),v._v(" "),a("ul",[a("li",[v._v("设计测试用例时，覆盖程序中所有可能的执行路径")]),v._v(" "),a("li",[v._v("优点：这种覆盖方法可以对程序进行彻底的测试用例覆盖，比前面讲的五种方法覆盖度都要高。")]),v._v(" "),a("li",[v._v("缺点：于路径覆盖需要对所有可能的路径进行测试（包括循环、条件组合、分支选择等），那么需要设计大量、复杂的测试用例，使得工作量呈指数级增长。路径覆盖\n虽然是一种比较强的覆盖，但未必考虑判断语句中条件表达式结果的组合，并不能代替条件覆盖和条件组合覆盖")])])]),v._v(" "),a("li",[a("p",[v._v("程序插桩（额 好像是应用？没搜明白）")])])]),v._v(" "),a("h3",{attrs:{id:"黑盒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#黑盒"}},[v._v("#")]),v._v(" 黑盒")]),v._v(" "),a("ul",[a("li",[v._v("等价划分")]),v._v(" "),a("li",[v._v("边界值")]),v._v(" "),a("li",[v._v("判定表")]),v._v(" "),a("li",[v._v("因果")]),v._v(" "),a("li",[v._v("场景")])]),v._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[v._v("#")]),v._v(" 概述")]),v._v(" "),a("h3",{attrs:{id:"缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺陷"}},[v._v("#")]),v._v(" 缺陷")]),v._v(" "),a("h3",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[v._v("#")]),v._v(" 测试")]),v._v(" "),a("ul",[a("li",[v._v("定义")]),v._v(" "),a("li",[v._v("目的")]),v._v(" "),a("li",[v._v("原则\n"),a("ul",[a("li",[v._v("二八原则")])]),v._v(" "),a("ol",[a("li",[v._v("80%的错误是由20%的模块引起的")]),v._v(" "),a("li",[v._v("80%的测试成本花在20%的软件模块中")]),v._v(" "),a("li",[v._v("80%的测试时间花在20%的软件模块中")]),v._v(" "),a("li")])]),v._v(" "),a("li",[v._v("分类\n"),a("ul",[a("li",[v._v("阶段")]),v._v(" "),a("li",[v._v("执行")]),v._v(" "),a("li",[v._v("代码")]),v._v(" "),a("li",[v._v("人工")]),v._v(" "),a("li",[v._v("目的\n"),a("ol",[a("li",[v._v("功能测试")]),v._v(" "),a("li",[v._v("性能测试")]),v._v(" "),a("li",[v._v("界面UI测试")]),v._v(" "),a("li",[v._v("健壮性")])])]),v._v(" "),a("li",[v._v("其它\n"),a("ol",[a("li",[v._v("冒烟 版本")]),v._v(" "),a("li",[v._v("随机")])])])])]),v._v(" "),a("li",[v._v("基本流程\n"),a("ul",[a("li",[v._v("需求分析")]),v._v(" "),a("li",[v._v("测试计划")]),v._v(" "),a("li",[v._v("设计测试用例")]),v._v(" "),a("li",[v._v("执行")]),v._v(" "),a("li",[v._v("评估（总结）")])])])]),v._v(" "),a("h2",{attrs:{id:"测试过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试过程"}},[v._v("#")]),v._v(" 测试过程")]),v._v(" "),a("h3",{attrs:{id:"单元"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元"}},[v._v("#")]),v._v(" 单元")]),v._v(" "),a("ul",[a("li",[v._v("JUnit")])]),v._v(" "),a("h3",{attrs:{id:"集成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成"}},[v._v("#")]),v._v(" 集成")]),v._v(" "),a("ul",[a("li",[v._v("Postman接口测试")]),v._v(" "),a("li",[v._v("JMeter接口测试")])]),v._v(" "),a("h3",{attrs:{id:"系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统"}},[v._v("#")]),v._v(" 系统")]),v._v(" "),a("ul",[a("li",[v._v("功能测试")]),v._v(" "),a("li",[v._v("性能测试")])]),v._v(" "),a("h3",{attrs:{id:"验收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验收"}},[v._v("#")]),v._v(" 验收")]),v._v(" "),a("h2",{attrs:{id:"测试模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试模型"}},[v._v("#")]),v._v(" 测试模型")]),v._v(" "),a("h3",{attrs:{id:"开发过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发过程"}},[v._v("#")]),v._v(" 开发过程")]),v._v(" "),a("h3",{attrs:{id:"测试流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试流程"}},[v._v("#")]),v._v(" 测试流程")]),v._v(" "),a("ul",[a("li",[v._v("生命周期\n"),a("ul",[a("li",[v._v("问题定义->需求分析->软件设计->软件开发->软件测试->软件维护->淘汰")])])]),v._v(" "),a("li",[v._v("基本流程")])]),v._v(" "),a("h3",{attrs:{id:"过程模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程模型"}},[v._v("#")]),v._v(" 过程模型")]),v._v(" "),a("ul",[a("li",[v._v("启动 -> 计划 -> 测试 -> 执行 -> 收尾")])]),v._v(" "),a("h2",{attrs:{id:"测试管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试管理"}},[v._v("#")]),v._v(" 测试管理")]),v._v(" "),a("h3",{attrs:{id:"启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[v._v("#")]),v._v(" 启动")]),v._v(" "),a("h3",{attrs:{id:"计划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计划"}},[v._v("#")]),v._v(" 计划")]),v._v(" "),a("ul",[a("li",[v._v("5w1h")]),v._v(" "),a("li",[v._v("风险预估")]),v._v(" "),a("li",[v._v("测试需求分析")])]),v._v(" "),a("h3",{attrs:{id:"设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[v._v("#")]),v._v(" 设计")]),v._v(" "),a("h3",{attrs:{id:"执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行"}},[v._v("#")]),v._v(" 执行")]),v._v(" "),a("ul",[a("li",[v._v("bug 回归测试")])]),v._v(" "),a("h3",{attrs:{id:"收尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收尾"}},[v._v("#")]),v._v(" 收尾")])])}),[],!1,null,null,null);_.default=s.exports}}]);